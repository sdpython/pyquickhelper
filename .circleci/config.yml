version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.10.1
    
    working_directory: ~/repo
    
    steps:
      - checkout

      - restore_cache:
          keys:
          - v3-dependencies-{{ checksum "requirements.txt" }}
          - v3-dependencies-

      - run:
          name: Install pandoc
          command: |
                    sudo apt-get update 
                    wget https://github.com/jgm/pandoc/releases/download/2.16.2/pandoc-2.16.2-1-amd64.deb
                    sudo dpkg -i pandoc-2.16.1-1-amd64.deb
          
      - run:
          name: Install tex (unstable)
          command: |
                    sudo apt-get update
                    sudo apt-get install -y texlive
                    sudo apt-get install -y texlive-latex-extra
                    sudo apt-get install -y texlive-xetex
                    sudo apt-get install -y dvipng
          
      - run:
          name: Install 7z, unrar
          command: |
                    sudo apt-get install -y p7zip-full
          
#      - run:
#          name: Install InkScape
#          command: |
#                    sudo apt-get install -y inkscape
          
      - run:
          name: Install graphviz
          command: |
                    sudo apt-get install -y graphviz
          
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install tkinterquickhelper pyensae --no-deps
            pip install scipy scikit-learn blockdiag nbconvert
            pip uninstall -y pyquickhelper

      - save_cache:
          paths:
            - ./venv
          key: v3-dependencies-{{ checksum "requirements.txt" }}
        
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            export PYTHONPATH=src
            python setup.py unittests

      - run:
          name: wheel
          command: |
            . venv/bin/activate
            python setup.py bdist_wheel
            mkdir -p test-reports/dist
            cp dist/*.whl test-reports/dist

#      - run:
#          name: documentation
#          command: |
#            . venv/bin/activate
#            python setup.py build_sphinx
#            
#      - run:
#          name: copy documentation
#          command: |
#            mkdir -p test-reports/doc
#            zip -r -9  test-reports/doc/documentation_html.zip _doc/sphinxdoc/build/html
            
      - store_artifacts:
          path: test-reports
          destination: test-reports