image:
  - Visual Studio 2019
environment:
  matrix:
    - PYTHON: "C:\\Python310-x64"
      PYTHON_VERSION: "3.10.x"
      PYTHON_ARCH: "64"

cache:
  # Use the appveyor cache to avoid re-downloading large archives such
  # the MKL numpy and scipy wheels mirrored on a rackspace cloud
  # container, speed up the appveyor jobs and reduce bandwidth.
  # Tips taken from scikit-learn.
  - c:\miktex -> .\bin\miktex-install.bat
  - '%APPDATA%\pip\Cache'

install:
    - set "PATH=%PATH%;c:\miktex\miktex\bin"
    - if not exist c:\miktex\miktex\bin\pdflatex.exe .\bin\miktex-install.bat    
    # Python
    - "%PYTHON%\\python -m pip install --upgrade pip"
    - "%PYTHON%\\Scripts\\pip install -r requirements.txt"
    - "%PYTHON%\\Scripts\\pip install pymyinstall"
    - "%PYTHON%\\Scripts\\pymy_install3 pylzma"
    - "%PYTHON%\\Scripts\\pip install cryptography pycryptodomex"
    # - "%PYTHON%\\Scripts\\pip install backports.shutil-get-terminal-size"
    # - "%PYTHON%\\Scripts\\pip install https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tarball/master"
    # - "dir %PYTHON%\\Scripts"
    # - "%PYTHON%\\Scripts\\jupyter-nbextension enable --py --sys-prefix widgetsnbextension"
    # - "%PYTHON%\\python -c \"from pymyinstall.fix import fix_win32ctypes_core_cffi__advapi32_py;fix_win32ctypes_core_cffi__advapi32_py(fLOG=print)\""
    - "%PYTHON%\\Scripts\\pip install tkinterquickhelper --no-deps"
    - set PYTHONPATH=src
    - set MPLBACKEND=AGG

build: off

before_test:
  - cinst pandoc
  - ps: $env:Path += ";C:\Program Files (x86)\Pandoc\"
  - pandoc -v
  # - cinst imagemagick

test_script:
  - "%PYTHON%\\python -u setup.py build_script"
  - "%PYTHON%\\python -u setup.py unittests"
  
after_test:
  - "%PYTHON%\\python -u setup.py bdist_wheel"

artifacts:
  - path: dist
    name: pyquickhelper
